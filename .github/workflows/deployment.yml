name: Deployment

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag"
        required: true

permissions:
  id-token: write
  contents: read
jobs:
  build:
    name: Build & Upload Web Application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      - name: Build & Push Image
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY || 'your_docker_registry' }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME || 'your_docker_user' }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD || 'your_docker_password'  }}
          IMAGE_NAME: ${{ vars.IMAGE_NAME || 'fastapi-docker' }}
          TAG: ${{ github.event.inputs.tag }}
        run: |
          release_version=$(uv tree --depth=0  2> /dev/null | awk '{print $2}' | cut -c 2-)
          tag_fin=${TAG:-$release_version}
          lock_hash=$(shasum -a 256 uv.lock)
          
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY
          
          if !(docker manifest inspect $DOCKER_REGISTRY/$IMAGE_NAME:${tag_fin})
          then
            docker buildx build --push --file docker/Dockerfile \
              --tag $DOCKER_REGISTRY/$IMAGE_NAME:${tag_fin} \
              --cache-to "type=registry,ref=$DOCKER_REGISTRY/$IMAGE_NAME:deps-${lock_hash:0:8},compression=zstd" \
              --cache-from "type=registry,ref=$DOCKER_REGISTRY/$IMAGE_NAME:deps-${lock_hash:0:8}" \
              --build-arg RELEASE_VERSION="$release_version" \
              --target runtime-image \
              .
          fi
